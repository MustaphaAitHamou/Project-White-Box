name: CI‑CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy-prod:
        description: "Déployer en production ? (yes/no)"
        required: false
        default: "no"

env:
  NODE_VERSION: "20"
  BUILD_DIR: "dist"
  REMOTE_DIR: "/var/www/tripgenius"
  LC_ALL: "C.UTF-8"

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint & type-check
        run: npm run lint

      - name: Build (Vite)
        run: npm run build

      - name: Upload build artefact
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: ${{ env.BUILD_DIR }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci

      - name: Run Vitest
        run: npm run test -- --coverage
        env:
          NODE_OPTIONS: "--experimental-vm-modules"

      - name: Upload coverage to Codecov
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/vitest-final.json
          flags: unittests
          fail_ci_if_error: true

  lighthouse:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site-build
          path: ${{ env.BUILD_DIR }}

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13

      - name: Run Lighthouse CI (collect + assert + upload)
        run: |
          lhci autorun --config=.lighthouserc.json

      - name: Upload LHCI reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: .lighthouseci

  package:
    needs: lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: |
          docker build -t tripgenius:${{ github.sha }} .
          docker image save tripgenius:${{ github.sha }} | gzip > image.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

  deploy-prod:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy-prod == 'yes'
    needs: package
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site-build
          path: ${{ env.BUILD_DIR }}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.IGLAO_SSH_KEY }}

      - name: Add Iglao to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.IGLAO_KNOWN_HOST }}" >> ~/.ssh/known_hosts

      - name: Rsync to server
        run: |
          rsync -avz --delete ${{ env.BUILD_DIR }}/ \
            ${{ secrets.IGLAO_USER }}@${{ secrets.IGLAO_HOST }}:${{ env.REMOTE_DIR }}

      - name: Smoke‑test production URL
        run: curl -f https://tripgenius.eu || exit 1
